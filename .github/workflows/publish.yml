name: Publish
on:
  workflow_run:
    workflows: [ "Build" ]
    branches: [ master ]
    types:
      - completed

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true 
      - name: Add Meta Files
        run: |
          echo -e "fileFormatVersion: 2\nguid: 766a31c3b9f34ab0885c9eb91f7b1fe4" > package.json.meta
          echo -e "fileFormatVersion: 2\nguid: adae7347fead42e782a1276d30931a41" > LICENSE.meta
          echo -e "fileFormatVersion: 2\nguid: 72a46a663e3b40d0b6e8ff25d554a779" > README.md.meta
          echo -e "fileFormatVersion: 2\nguid: a2951ed31fba458ca06c535598194a28" > CHANGELOG.md.meta
          echo -e "fileFormatVersion: 2\nguid: a2a4b6cb3229489f99c06f0771c522ce" > CONTRIBUTING.md.meta
          echo -e "fileFormatVersion: 2\nguid: 931f3c49f79d4032bceefe14682a7d5a" > VisualPinball.Unity.meta
          echo -e "fileFormatVersion: 2\nguid: ea4f7f8d4c2c418e9fc0fbed8ab1f5a9" > VisualPinball.Engine.meta
      - name: Fetch next version
        id: nextVersion
        uses: VisualPinball/next-version-action@v0.1.6
        with:
          tagPrefix: 'v'
      - name: Bump
        if: ${{ steps.nextVersion.outputs.isBump == 'true' }} 
        run: |
          npm version ${{ steps.nextVersion.outputs.nextVersion }} --no-git-tag-version    
      - name: Publish
        run: |
          echo "//registry.visualpinball.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Commit
        id: commit
        if: ${{ steps.nextVersion.outputs.isBump == 'true' }} 
        run: |
          git config user.name "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "release: ${{ steps.nextVersion.outputs.nextTag }}."
          git push
          commitish=$(git rev-parse HEAD)
          echo ::set-output name=commitish::${commitish}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.nextVersion.outputs.nextTag }}
          release_name: ${{ steps.nextVersion.outputs.nextTag }}
          prerelease: ${{ steps.nextVersion.outputs.isPrerelease }}
          commitish: ${{ steps.commit.outputs.commitish }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

